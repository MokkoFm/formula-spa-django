# Generated by Django 3.1.3 on 2020-11-14 23:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('phonenumber', models.CharField(blank=True, max_length=20)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'клиент',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registrated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата регистрации')),
                ('comment', models.TextField(blank=True, verbose_name='комментарий')),
                ('is_digital', models.BooleanField(db_index=True, default=False, verbose_name='эл. сертификат')),
                ('is_complete', models.BooleanField(db_index=True, default=False, verbose_name='статус')),
                ('payment_method', models.CharField(choices=[('Cash', 'Наличными'), ('Card', 'По карте')], default='Неизвестно', max_length=4, verbose_name='способ оплаты')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='spaweb.customer', verbose_name='клиент')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(verbose_name='адрес для доставки')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaweb.city', verbose_name='город доставки')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaweb.customer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spaweb.order')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('description', models.TextField(verbose_name='описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='цена')),
                ('image', models.ImageField(upload_to='images', verbose_name='фото товара')),
                ('ingredients', models.CharField(blank=True, max_length=200, verbose_name='что включено')),
                ('slug', models.SlugField(null=True)),
                ('category', models.ManyToManyField(related_name='category_products', to='spaweb.ProductCategory', verbose_name='категория')),
                ('city', models.ManyToManyField(related_name='city_products', to='spaweb.City', verbose_name='город')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(25)], verbose_name='количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='spaweb.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_items', to='spaweb.product')),
            ],
            options={
                'verbose_name': 'товар в заказе',
                'verbose_name_plural': 'товары в заказе',
            },
        ),
    ]
